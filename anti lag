-- lagcleaner_instant.lua
-- - limpia efectos visuales (Fire, Smoke, ParticleEmitter, Beam, Trail, Sparkles, Lights)
-- - elimina objetos con nombres de dinero/monedas
-- - simplifica materiales y decals/texturas
-- - todo de una sola vez (sin loop permanente)
-- - NO usa RemoteEvents, solo se controla con _G.SB_toggleLagCleaner

if _G.SB_lagcleaner_loaded then return end
_G.SB_lagcleaner_loaded = true

local Workspace = workspace
local string_lower = string.lower
local pcall = pcall

-- configuración
local NAME_KEYWORDS = { "money", "cash", "coin", "moneda", "monedas", "dinero" }

-- checks
local function isEffectInstance(inst)
    if not inst then return false end
    if inst:IsA("ParticleEmitter") or inst:IsA("Trail") or inst:IsA("Beam")
    or inst:IsA("Sparkles") or inst:IsA("Fire") or inst:IsA("Smoke") then
        return true
    end
    if inst:IsA("PointLight") or inst:IsA("SurfaceLight") or inst:IsA("SpotLight") then
        return true
    end
    return false
end

local function nameLooksLikeMoney(name)
    if not name or name == "" then return false end
    local n = string_lower(tostring(name))
    for _, kw in ipairs(NAME_KEYWORDS) do
        if n:find(kw, 1, true) then return true end
    end
    return false
end

local function simplifyPart(part)
    if not part or not part:IsA("BasePart") then return end
    pcall(function()
        part.Material = Enum.Material.Plastic
        part.CastShadow = false
        part.Reflectance = 0
        for _, child in ipairs(part:GetChildren()) do
            if child:IsA("Decal") or child:IsA("Texture") then
                pcall(function() child.Texture = "" end)
            elseif child:IsA("SurfaceAppearance") then
                pcall(function() child:Destroy() end)
            end
        end
    end)
end

local function handleInstance(inst)
    if not inst then return end

    if nameLooksLikeMoney(inst.Name) then
        pcall(function() inst:Destroy() end)
        return
    end

    if isEffectInstance(inst) then
        pcall(function()
            if inst:IsA("ParticleEmitter") then inst.Enabled = false
            elseif inst:IsA("Trail") or inst:IsA("Beam") or inst:IsA("Fire") or inst:IsA("Smoke") then
                inst:Destroy()
            elseif inst:IsA("Sparkles") then inst.Enabled = false
            elseif inst:IsA("PointLight") or inst:IsA("SurfaceLight") or inst:IsA("SpotLight") then
                inst.Enabled = false
            end
        end)
        return
    end

    if inst:IsA("BasePart") then
        simplifyPart(inst)
    elseif inst:IsA("Decal") or inst:IsA("Texture") then
        pcall(function() inst.Texture = "" end)
    elseif inst:IsA("SurfaceAppearance") then
        pcall(function() inst:Destroy() end)
    end
end

-- función que limpia TODO en una sola pasada
local function runCleaner()
    for _, obj in ipairs(Workspace:GetDescendants()) do
        handleInstance(obj)
    end
end

-- API pública para activar/desactivar
_G.SB_toggleLagCleaner = function(enable)
    if enable then
        runCleaner()
        if _G.Utils and _G.statusLabel then
            _G.Utils:SetStatus(_G.statusLabel, "[SYSTEM] LagCleaner ejecutado", 2.0)
        end
    else
        if _G.Utils and _G.statusLabel then
            _G.Utils:SetStatus(_G.statusLabel, "[SYSTEM] LagCleaner inactivo", 2.0)
        end
    end
end

if _G.Utils and _G.statusLabel then
    _G.Utils:SetStatus(_G.statusLabel, "[SYSTEM] LagCleaner loaded (instant mode)", 1.6)
end
